# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.
"""
n = int(input("Введите количество элементов первого множества: "))
m = int(input("Введите количество элементов второго множества: "))

set1 = set()
set2 = set()

for i in range(n):
    element = int(input("Введите элемент первого множества: "))
    set1.add(element)

for i in range(m):
    element = int(input("Введите элемент второго множества: "))
    set2.add(element)

common_elements = sorted(list(set1.intersection(set2)))

print("Общие элементы в порядке возрастания:", common_elements)
"""
# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод —
# на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.
"""
import random

N = [random.randint(0, 10) for i in range(int(input("Введите количество кустов \"N\": ")))]
print(N)
max_summa3 = 0
tmp = 0
index = 0

for i in range(1, len(N)-2):
    tmp = N[i-1] + N[i] + N[i+1]
    if max_summa3 < tmp:
        max_summa3 = tmp
        index = i

print(f"Максимальное количество ягод, которые можно собрать с куста: {max_summa3} \nМесто среднего куста: {index}")
"""